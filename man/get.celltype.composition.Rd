% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{get.celltype.composition}
\alias{get.celltype.composition}
\title{Calculate cell type composition or frequencies}
\usage{
get.celltype.composition(
  object = NULL,
  group.by.composition = NULL,
  split.by = NULL,
  min.cells = 10,
  useNA = FALSE,
  clr_zero_impute_perc = 1
)
}
\arguments{
\item{object}{A seurat object or metadata dataframe.}

\item{group.by.composition}{The Seurat object metadata column(s) containing celltype annotations (provide as character vector, containing the metadata column name(s))}

\item{split.by}{A Seurat object metadata column to split by (e.g. sample names)}

\item{min.cells}{Set a minimum threshold for number of cells to calculate relative abundance (e.g. less than 10 cells -> no relative abundnace will be calculated)}

\item{useNA}{Whether to include not annotated cells or not (labelled as "NA" in the group.by.composition). Can be defined separately for each group.by.composition (provide single boolean or vector of booleans)}

\item{clr_zero_impute_perc}{To calculate the clr-transformed relative abundance ("clr_freq"), zero values are not allowed and need to be imputed (e.g. by adding a pseudo cell count). Instead of adding a pseudo cell count of flat +1, here a pseudo cell count of +1\% of the total cell count will be added to all cell types, to better take into consideration the relative abundance ratios (e.g. adding +1 cell to a total cell count of 10 cells would have a different, i.e. much larger effect, than adding +1 to 1000 cells).}
}
\value{
Cell type compositions as a list of data.frames containing cell counts, relative abundance (freq) and clr-transformed freq (freq_clr), respectively.
}
\description{
Calculate cell type composition or frequencies
}
\examples{
devtools::install_github('satijalab/seurat-data')
library(SeuratData)
options(timeout = max(300, getOption("timeout")))
InstallData("panc8")
data("panc8")
panc8 = UpdateSeuratObject(object = panc8)
# Calculate overall composition
celltype.compositions.overall <- get.celltype.composition(object = panc8, group.by.composition = "celltype")

# Calculate sample-wise composition
celltype.compositions.sample_wise <- get.celltype.composition(object = panc8, group.by.composition = "celltype", split.by = "orig.ident")

}
